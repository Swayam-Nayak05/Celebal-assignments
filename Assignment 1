// 1) 
  a=int(input())
  a=int(input())
  print(a+b)
  print(a-b)
  print(a*b)

# 2)
from itertools import groupby
if __name__ == '__main__':
    s = input().rstrip()
    s_grouped = list((len(list(g)), int(k)) for k, g in groupby(s))
    for c in s_grouped:
        print(c, end=' ')
        

# 3)
def minion_game(string):
    s=string
    vow=0
    con=0
    kev=['A', 'E', 'I', 'O', 'U']
    for i in range(len(s)):
        if s[i] in kev:
            vow+=len(s)-i
        else:
            con+=len(s)-i
            
    if vow>con:
        print("Kevin", vow)
    elif vow<con:
        print("Stuart", con)
    else:
        print("Draw")

if __name__ == '__main__':
    s = input()
    minion_game(s)

# 4)
def is_leap(year):
    leap = False
    if year % 400==0 or year % 4==0 and year % 100!=0: 
        leap = True 
    else:
        leap = False 
    return leap

year = int(input())
print(is_leap(year))


# 5)
from itertools import combinations
n=int(input())
ls=input().split()
k=int(input())
combination=list(combinations(ls,k))
count=0
for combo in combination:
    if 'a' in combo:
        count+=1
print(count/len(combination))

# 6)
n = int(input())
integer_list = tuple(map(int, input().split()))
result=hash(integer_list)
print(result)


# 7)
if __name__ == '__main__':
    n = int(input())
    student_marks = {}
    for _ in range(n):
        name, *line = input().split()
        scores = list(map(float, line))
        student_marks[name] = scores
    query_name = input()
    
    average_marks = sum(student_marks[query_name]) / len(student_marks[query_name]) 
    print(f"{average_marks:.2f}")

# 8) 
def print_formatted(number):
    w = len(format(number, 'b'))
    for i in range(1, number+1):
        d=format(i, 'd').rjust(w, ' ')
        o=format(i, 'o').rjust(w, ' ')
        x=format(i, 'x').rjust(w, ' ').upper()
        b=format(i, 'b').rjust(w, ' ')
        print(f"{d} {o} {x} {b}")
        
if __name__ == '__main__':
    n = int(input())
    print_formatted(n)


